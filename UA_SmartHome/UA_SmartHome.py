# Перевірка версії Пітона (python --version => Python 3.13.2)

# Час
tгод = 1  # Одна година
print("t =", tгод, "годин")  # Візуалізація годин
print("Все відбувається за 1 секунду")  # Візуалізація події

# Сонце
Gсонце = 1  # Вхідна потужність сонця 0 - 1.1 кВт   День , Ясно : 1,1;  Ніч , Пасмурно : 0
k = 0.5  # Тип сонячного колектора 0.1 - 0.9
print("Тип сонячного колектора (0.1 - 0.9) k =", k)  # Візуалізація типу сонячного колектора
dGсонце = k * Gсонце  # Потужність, яку віддає сонце колектору, з врахуванням типу колектора, кВт
print("Потужності сонця на поверхні сонячного колектора Gсонце =", Gсонце, "кВт")  # Візуалізація потужності сонця на поверхні сонячної системи кВт
dEсонце = dGсонце * tгод / 3600  # Частина енергії, яку віддає сонце колектору кВт * год  за 1 с

# Атмосфера
Tатмосфера = 20  # Температура атмосфери, стартова ідеальна нульова 20С , діапазон -35С / +95C   Зима : -35;  Літо : +95
print("Tатмосфера =", Tатмосфера, "градусів С")  # Візуалізація температури атмосфери

# Колектор
# c - питома теплоємність води 4186,8 Дж/(кг·°C)
# 1 л води= 1 кг води
# 1 Дж = 1 Вт*с
# c води 4186,8 / 1000 / 3600 = 0.001163  ((кВт*год)/(л*С))
try:
    Eколектор  # Перевіряє чи є значення, якщо нема, то
except NameError: 
    Eколектор = 0.2  # Встановлює значення
print("Eколектор =",Eколектор, "кВт*год")  # Візуалізація енергії колектора
Tколектор = Eколектор *100  # Температура колектора, градусів C
print("Tколектор =",Tколектор, "С")  # Візуалізація температури колектора
Sколектор = 1  # Сонячна площа колектора , м2
print("Sколектор =",Sколектор, "м2")  # Візуалізація плоші колектора
Vколектор = 10 * Sколектор  # Обєм колектора в літрах
print("Vколектор =",Vколектор, "л")  # Візуалізація обєма колектора
cводи = 0.001163  # ((кВт*год)/(л*С))  Теплоємність води за 1 секунду в кВт*год
maxTколектор = 100  # Максимальна температура колектора
minTколектор = 0  # Мінімальна температура колектора
maxEколектор = Vколектор * cводи * (maxTколектор - minTколектор)  # Максимальна енергія в колектор від сонця в кВт * год
print("maxEколектор =",maxEколектор, "максимальної енергії колектора, кВт")  # Візуалізація максимальної енергії колектора
Eколектор += dEсонце  # Добавка в колектор від сонця
print("Eколектор =",Eколектор, "сумарної енергії колектора, кВт")  # Візуалізація сумарної енергії колектора
Kколектор_бак = 1  # Насос між колектором і баком, продуктивність кВт*год 
print("Kколектор_бак =",Kколектор_бак, "продуктивність насосу колектор-бак")  # Візуалізація насоса
dEколектор = Eколектор * Kколектор_бак / 3600  # Частина енергії, яку віддає колектор баку, кВт*год в 1 секунду
Tколектор = Eколектор *100  # Температура колектора, градусів C
print("Tколектор =",Tколектор, "С")  # Візуалізація температури колектора
Eколектор -= dEколектор  # Добавка в колектор від сонця
print("Eколектор =",Eколектор, "сумарної енергії колектора, кВт")  # Візуалізація сумарної енергії колектора
Tколектор = Eколектор *100  # Температура колектора, градусів C
print("Tколектор =",Tколектор, "С")  # Візуалізація температури колектора

# Нагрівач
Gнагрівач = 1  # Потужність нагрівача 0 - 10 кВт
print("Gнагрівач",Gнагрівач, "кВт")  # Візуалізація енергії нагрівача
Eнагрівач = Gнагрівач * tгод  # Розрахунок енергії нагрівача кВт*год
dEнагрівач = Eнагрівач / 3600  # Розрахунок енергії нагрівача кВт*год за 1 секунду

# Бак
try:
    Eбак  # Перевіряє чи є значення, якщо нема, то
except NameError:
    Eбак = 0.2  # Встановлює значення
print("Eбак =",Eбак, "кВт*год")  # Візуалізація енергії бака
Tбак = Eбак * 100  # Температура бака, градусів C
print("Tбак =",Tбак, "С")  # Візуалізація температури бака
maxTбак = 100  # Максимальна температура бака
minTбак = 0  # Мінімальна температура бака
Vбак = 1000  # Обєм бака в літрах
print("Vбак =",Vбак, "л")  # Візуалізація обєма бака
maxEбак = Vбак * cводи * (maxTбак - minTбак)  # Максимальна енергія бака в кВт * год
Eбак += (dEколектор + dEнагрівач)  # Розрахунок енергії бака
print("Eбак =",Eбак, "кВт*год")  # Візуалізація енергії бака
Kбак_радіатор = 1  # Насос з бака в радіатор
print("Kбак_радіатор =",Kбак_радіатор, "продуктивність насосу бак-радіатор")  # Візуалізація насоса
dEбак = Eбак * Kбак_радіатор / 3600  # Частина енергії, яку віддає бак до радіатора кВт*год в 1 секунду
Tбак = Eбак * 100  # Температура бака, градусів C
print("Tбак =",Tбак, "С")  # Візуалізація температури бака
Eбак -= dEбак  # Розрахунок зменшення енергії в баку енергії
print("Eбак =",Eбак, "кВт*год")  # Візуалізація енергії бака
Tбак = Eбак * 100  # Температура бака, градусів C
print("Tбак =",Tбак, "С")  # Візуалізація температури бака

# Радіатор
try:
    Tдім  # Перевіряє чи є значення, якщо нема, то
except NameError:
    Tдім = 20  # Встановлює значення
print("Tдім =",Tдім, "градуси С")  # Візуалізація температури дому
try:
    Eрадіатор  # Перевіряє чи є значення, якщо нема, то
except NameError:
    Eрадіатор = 0.2  # Встановлює значення
print("Eрадіатор =",Eрадіатор, "сумарна енергія радіатора в кВт*год")  # Візуалізація енергії радіатора
maxTрадіатор = 100  # Максимальна температура радіатора
minTрадіатор = 0  # Мінімальна температура радіатора
Vрадіатор = 100  # Обєм бака в літрах
print("Vрадіатор =",Vрадіатор, "л")  # Візуалізація обєма радіатора
maxEрадіатор = Vрадіатор * cводи * (maxTрадіатор - minTрадіатор)  # Максимальна енергія радіатора в кВт * год
Eрадіатор += dEбак  # Розрахунок енергії радіатора
print("Eрадіатор =",Eрадіатор, "сумарна енергія радіатора в кВт*год")  # Візуалізація енергії радіатора
Tрадіатор = Eрадіатор * 100  # Температура радіатора, градусів C
print("Tрадіатор =",Tрадіатор, "С")  # Візуалізація температури радіатора
Sрадіатор = 1  # Площа радіатора що віддає тепло (м2)
dрадіатор = 0.01  # Товщина радіатора (м)
fрадіатор = 0.001  # Коефіцієнт теплопровідності радіатора (кВт/(м*С))
Rрадіатор = dрадіатор / fрадіатор  # Тепловий опір радіатора ((м2*С)/кВт)
dEрадіатор = (Sрадіатор / Rрадіатор) * (Tрадіатор - Tдім) / 3600  # Частина енергії, яку віддає радіатор дому, кВт*год за 1 секунду
Eрадіатор -= dEрадіатор  # Розрахунок енергії радіатора
print("Eрадіатор =",Eрадіатор, "кВт*год")  # Візуалізація енергії радіатора
Tрадіатор = Eрадіатор * 100  # Температура радіатора, градусів C
print("Tрадіатор =",Tрадіатор, "С")  # Візуалізація температури радіатора

# Дім
# c - питома теплоємність повітря  1005 Дж/(кг·°C)
# 1005 / 1000 / 3600 = 0.000279  ((кВт*год)/(л*С))
try:
    Eдім  # Перевіряє чи є значення, якщо нема, то
except NameError:
    Eдім = 0.2  # Встановлює значення
print("Eдім",Eдім,"сумарна енергія дому в кВт*год")  # Візуалізація енергії дому
Tдім = Eдім * 100  # Температура дому, градусів C
print("Tдім =",Tдім, "С")  # Візуалізація температури радіатора
Eдім += dEрадіатор  # Розрахунок енергії дому
print("Eдім",Eдім,"сумарна енергія дому в кВт*год")  # Візуалізація енергії дому
maxTдім = 100  # Максимальна температура дому
minTдім = 0  # Мінімальна температура дому
Vдім = 10000  # Обєм бака в літрах
print("Vдім =",Vдім, "л")  # Візуалізація обєма дому
cповітря = 0.000279  # ((кВт*год)/(л*С))
maxEдім = Vдім * cповітря * (maxTдім - minTдім)  # Максимальна енергія дому в кВт * год
Tдім = Eдім * 100  # Температура дому, градусів C
print("Tдім =",Tдім, "С")  # Візуалізація температури радіатора
Sдім = 1  # Площа всіх зовнішніх поверходь будинку (м2)
dдім = 0.01  # Товщина поверхонь будинку (м)
fдім = 0.001  # Коефіцієнт теплопровідності поверхонь будинку (кВт/(м*С))
Rдім = dдім / fдім  # Тепловий опір ізоляції будинку ((м2*С)/кВт)
dEдім = (Sдім / Rдім) * (Tатмосфера - Tдім) / 3600  # Частина енергії, яку втрачає дім, кВт*год за 1 секунду
Eдім += dEдім  # Розрахунок енергії дому
print("Eдім",Eдім)  # Візуалізація енергії дому
Tдім = Eдім * 100  # Температура дому, градусів C
print("Tдім =",Tдім, "С")  # Візуалізація температури радіатора


# Вікно
# Датчики температур в вигляді повзунка
# Сумарні енергії в вигляді стовбчиків
# Графіки зміни температур і енегрій

# Встановлення бібліотеки (pip install dearpygui)
# >>> import importlib.metadata
# >>> print(importlib.metadata.version("dearpygui"))
# >>> 2.0.0

import dearpygui.dearpygui as dpg

dpg.create_context()
dpg.create_viewport(title="Інтерфейс зі шрифтом", width=600, height=300)

# 🔤 Реєстрація шрифту
with dpg.font_registry():
    default_font = dpg.add_font("C:/Smart_Home/Noto_Sans/static/NotoSans-Regular.ttf", 20)

# 🪟 Вікно
with dpg.window(label="Привіт, світ"):
    dpg.add_text("Тест українського тексту", tag="my_text")
    dpg.add_button(label="Кнопка")

dpg.bind_font(default_font)  # 🎯 Прив'язка шрифту до інтерфейсу

dpg.setup_dearpygui()
dpg.show_viewport()
dpg.start_dearpygui()
dpg.destroy_context()


"""
import dearpygui.dearpygui as dpg

dpg.create_context()

with dpg.window(label="SmartHome"):
    dpg.add_text("Detek")
    dpg.add_button(label="Save")
    dpg.add_input_text(label="txt", default_value="Data")
    dpg.add_slider_float(label="Temperatur", default_value=0.1, max_value=1)

dpg.create_viewport(title='Custom Title', width=600, height=200)
dpg.setup_dearpygui()
dpg.show_viewport()
dpg.start_dearpygui()
dpg.destroy_context()
"""
